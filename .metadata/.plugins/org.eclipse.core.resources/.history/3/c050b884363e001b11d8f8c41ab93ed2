package main;

public class ExtSpike extends Entity {

	int length;
	int coordsXSpikeHead;
	int coordsYSpikeHead;
	boolean isExtending;
	boolean canDestroy;
	int extentionTime;
	int spikeTimer;

	public ExtSpike(char pRotation) {
		rotation = pRotation;
		color = 1;
	}

	// checks for every case if something is in front of the spike
	private boolean isSomethingInFront(char pContent) {
		switch (rotation) {
		case 'd':
			return Map.map[coordsXSpikeHead + 1][coordsYSpikeHead] == pContent;
		case 's':
			return Map.map[coordsXSpikeHead][coordsYSpikeHead + 1] == pContent;
		case 'a':
			return Map.map[coordsXSpikeHead - 1][coordsYSpikeHead] == pContent;
		case 'w':
			return Map.map[coordsXSpikeHead][coordsYSpikeHead - 1] == pContent;
		}
		return true;
	}

	public void SpikeTimer() {
		if (isExtending && !isSomethingInFront('#')) {
			extendSpike();
		} else if (isExtending && spikeTimer < extentionTime) {
			spikeTimer++;
		} else {
			isExtending = false;
			if (coordsXSpikeHead == coordsXEntity && coordsYSpikeHead == coordsYEntity) {
				retractSpike();
			}
		}
	}

	private void extendSpike() {

	}

	private void retractSpike() {

	}

}
