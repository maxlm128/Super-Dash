package main;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class MapLoader {

	static String file = "maps/Map1.txt";
	static String raw;

//loads the entire map which is given to the method into the variable raw
	public static void loadAll(String pFile) {
		raw = "";
		BufferedReader reader = new BufferedReader(new InputStreamReader(MapLoader.class.getResourceAsStream(pFile)));
		raw = new String();
		String line;
		try {
			while ((line = reader.readLine()) != null) {
				raw += line + "\n";
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

//if executed ,the method loads the variable raw ,which was loaded in loadAll() ,into an array and returns it rotated on the x and y-axis
	public static char[][] charsgetMap() {
		String[] lines = raw.split("\n");
		char[][] map = new char[lines.length][];
		for (int i = 0; i < map.length; i++) {
			map[i] = lines[i].toCharArray();
		}
		return rotateCW(flipInPlace(map));
	}

//flips a array on the x-axis
	private static char[][] rotateCW(char[][] mat) {
		final int m = mat.length;
		final int n = mat[0].length;
		char[][] theArray = new char[n][m];
		for (int r = 0; r < m; r++) {
			for (int c = 0; c < n; c++) {
				theArray[c][m - 1 - r] = mat[r][c];
			}
		}
		return theArray;
	}

//flips a array on the y-axis
	private static char[][] flipInPlace(char[][] theArray) {
		for (int i = 0; i < (theArray.length / 2); i++) {
			char[] temp = theArray[i];
			theArray[i] = theArray[theArray.length - i - 1];
			theArray[theArray.length - i - 1] = temp;
		}
		return theArray;
	}
}
