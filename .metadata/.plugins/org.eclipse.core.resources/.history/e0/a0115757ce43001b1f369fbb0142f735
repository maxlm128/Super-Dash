package main;

public class MovingBox extends Entity {
	boolean goingBack;

	// checks for every case if something is in front of the spike
	private boolean isSomethingInFront(char pContent) {
		switch (rotation) {
		case 'd':
			return Map.map[coordsXEntity + 1][coordsXEntity] == pContent;
		case 's':
			return Map.map[coordsXEntity][coordsXEntity + 1] == pContent;
		case 'a':
			return Map.map[coordsXEntity - 1][coordsXEntity] == pContent;
		case 'w':
			return Map.map[coordsXEntity][coordsXEntity - 1] == pContent;
		}
		return true;
	}

	public void BlockTimer() {
		if (!goingBack && isSomethingInFront(' ')) {
			moveBlockAway();
		} else if (!goingBack) {
			goingBack = true;
		} else if (goingBack && isSomethingInFront(' ')) {
			moveBlockBack();
		} else if (goingBack) {
			goingBack = false;
		}
	}

	public void moveBlockAway() {
		switch (rotation) {
		case '-':
			Map.map[coordsXEntity][coordsYEntity] = ' ';
			screen.print(coordsXEntity, coordsYEntity, color);
		case '|':
		}
	}

	public void moveBlockBack() {

	}
}
